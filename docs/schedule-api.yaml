openapi: 3.0.3
info:
  title: Concert Program APIs
  description: APIs supporting Concert Program and Scheduling
  version: 0.4.0
servers:
  - url: 'https://schedule.pafenorthwest.org/api/'

paths:
  /composer:
    post:
      summary: creates a new composer
      description: adds a new composer with years active
      security:
        - BearerAuth: []

      requestBody:
        description: 'json data for the composer'
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Composer'

      responses:
        201:
          description: 'created'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EntityCreated'
        400:
          description: 'bad data, missing fields or incorrect format'
        401:
          description: 'unauthorized, lacking authorization header'
        403:
          description: 'unauthorized, bad token'
        500:
          description: 'service error'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
  /composer/{id}:
    parameters:
      - in: path
        name: id
        schema:
          type: integer
        required: true
        description: 'numerical id of composer'

    get:
      summary: 'get a composer by id'
      responses:
        200:
          description: 'returned'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Composer'
        401:
          description: 'unauthorized, lacking authorization header'
        403:
          description: 'unauthorized, bad token'
        404:
          description: 'not found'
        500:
          description: 'service error'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
    put:
      summary: 'update a composer by id'
      security:
        - BearerAuth: []

      requestBody:
        description: 'json data for the composer'
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Composer'

      responses:
        200:
          description: 'returned'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Composer'
        401:
          description: 'unauthorized, lacking authorization header'
        403:
          description: 'unauthorized, bad token'
        404:
          description: 'not found'
        500:
          description: 'service error'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
    delete:
      summary: 'remove a composer by id'
      security:
        - BearerAuth: []

      responses:
        200:
          description: 'returned'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EntityCreated'
        401:
          description: 'unauthorized, lacking authorization header'
        403:
          description: 'unauthorized, bad token'
        404:
          description: 'not found'
        500:
          description: 'service error'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'

components:
  schemas:
    Composer:
      type: object
      properties:
        printed_name:
          type: string
        years_active:
          type: string
      required:
        - printed_name
        - years_active
      example:
        printed_name: 'Johann Sebastian Bach'
        years_active: '1685 - 1750'
    Error:
      type: object
      properties:
        result:
          type: string
        reason:
          type: string
      example:
        result: 'error'
        reason: 'a database error occurred'
    EntityCreated:
      type: object
      properties:
        id:
          type: integer
      example:
        id: 123
  securitySchemes:
    BearerAuth:
      type: http
      scheme: bearer
      bearerFormat: JWT # Optional: indicates the token format (e.g., JWT)

