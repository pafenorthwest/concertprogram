name: PR Checks

on:
  pull_request:
    branches:
      - main
  workflow_dispatch:
    inputs:
      job:
        description: 'Which job to run (lint, unit-tests, db-tests, all)'
        required: false
        default: 'all'

jobs:
  lint:
    if: ${{ github.event_name != 'workflow_dispatch' || github.event.inputs.job == 'lint' || github.event.inputs.job == 'all' }}
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3

      - uses: actions/setup-node@v3
        with:
          node-version: '20'
          cache: 'npm'

      - run: npm ci

      - name: Run ESLint with PR Annotations
        run: npm run lint

  unit-tests:
    if: ${{ github.event_name != 'workflow_dispatch' || github.event.inputs.job == 'unit-tests' || github.event.inputs.job == 'all' }}
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3

      - uses: actions/setup-node@v3
        with:
          node-version: '20'
          cache: 'npm'

      - run: npm ci

      - name: Run Unit Tests
        run: npm test test/lib

  integration-tests:
    if: ${{ github.event_name != 'workflow_dispatch' || github.event.inputs.job == 'db-tests' || github.event.inputs.job == 'all' }}
    runs-on: ubuntu-latest
    services:
      postgres:
        image: postgres:15
        env:
          POSTGRES_DB: pafe
          POSTGRES_USER: postgres
          POSTGRES_PASSWORD: postgres
        ports:
          - 5432:5432
        options: >-
          --health-cmd "pg_isready -U postgres"
          --health-interval 5s
          --health-timeout 3s
          --health-retries 10

    env:
      DATABASE_URL: postgresql://postgres:postgres@localhost:5432/pafe
      PGPASSWORD: postgres
      auth_code: testauthcode
      VITE_DATABASE_URL: postgresql://postgres:postgres@localhost:5432/pafe
      VITE_DB_SSL: False

    steps:
      - uses: actions/checkout@v3

      - uses: actions/setup-node@v3
        with:
          node-version: '20'
          cache: 'npm'

      - run: npm ci

      - name: Wait for Postgres
        run: |
          for i in {1..10}; do
            if pg_isready -h localhost -U postgres; then
              echo "Postgres is ready!"
              break
            fi
            echo "Waiting for Postgres..."
            sleep 2
          done

      - name: Initialize Database
        run: psql -h localhost -d pafe -U postgres -f database/init.sql

      - name: Run DB Integration Tests
        run: npm test test/db

      - name: Start Dev Server
        run: |
          npm run dev &
          echo $! > server_pid.txt
          sleep 5

      - name: Retry API Tests up to 3 Times
        uses: nick-fields/retry@v3
        with:
          max_attempts: 3
          retry_wait_seconds: 2
          timeout_seconds: 50
          command: npm test test/api

      - name: Stop Dev Server
        run: |
          if [ -f server_pid.txt ]; then
            kill $(cat server_pid.txt) || true
          fi

  check-all:
    if: ${{ github.event_name != 'workflow_dispatch' || github.event.inputs.job == 'all' }}
    runs-on: ubuntu-latest
    needs: [lint, unit-tests, integration-tests]
    steps:
      - name: All checks passed
        run: echo "âœ… All checks passed!"
